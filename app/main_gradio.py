import os
from dotenv import load_dotenv
from openai import OpenAI
import gradio as gr
import time

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()
API_KEY = os.getenv("API_KEY")
BASE_URL = os.getenv("BASE_URL")
#client = OpenAI(api_key=api_key)
client = OpenAI(api_key=API_KEY, base_url=BASE_URL)


# –§—É–Ω–∫—Ü–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø–ª–∞–Ω–∞ –∑–∞–Ω—è—Ç–∏—è
def generate_lesson_plan_interface(
    –Ω–∞—Ä—É—à–µ–Ω–∏–µ, –≤–æ–∑—Ä–∞—Å—Ç_—Ä–µ–±–µ–Ω–∫–∞, —Ü–µ–ª—å_–∑–∞–Ω—è—Ç–∏—è, —Ñ–æ—Ä–º–∞—Ç_–∑–∞–Ω—è—Ç–∏—è,
    –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ_–¥–µ—Ç–µ–π, —Ç–µ–º–∞—Ç–∏–∫–∞, –æ—Å–æ–±—ã–µ_—É—Å–ª–æ–≤–∏—è,
    –∑–µ—Ä–∫–∞–ª–æ, –∫–∞—Ä—Ç–æ—á–∫–∏, –∏–≥—Ä—É—à–∫–∏, –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π_–∏–Ω–≤–µ–Ω—Ç–∞—Ä—å,
    –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å_–∑–∞–Ω—è—Ç–∏—è, –Ω–∞–ª–∏—á–∏–µ_–î–ó, —Ä–∞–∑—Ä–µ—à–µ–Ω_web_search
):
    –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å = []
    if –∑–µ—Ä–∫–∞–ª–æ: –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å.append("–ó–µ—Ä–∫–∞–ª–æ")
    if –∫–∞—Ä—Ç–æ—á–∫–∏: –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å.append("–ö–∞—Ä—Ç–æ—á–∫–∏")
    if –∏–≥—Ä—É—à–∫–∏: –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å.append("–ò–≥—Ä—É—à–∫–∏")
    if –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π_–∏–Ω–≤–µ–Ω—Ç–∞—Ä—å: –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å.append(–¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π_–∏–Ω–≤–µ–Ω—Ç–∞—Ä—å)
    –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å = ", ".join(–∏–Ω–≤–µ–Ω—Ç–∞—Ä—å)

    params = {
        "–Ω–∞—Ä—É—à–µ–Ω–∏–µ": –Ω–∞—Ä—É—à–µ–Ω–∏–µ,
        "–≤–æ–∑—Ä–∞—Å—Ç_—Ä–µ–±–µ–Ω–∫–∞": –≤–æ–∑—Ä–∞—Å—Ç_—Ä–µ–±–µ–Ω–∫–∞,
        "—Ü–µ–ª—å_–∑–∞–Ω—è—Ç–∏—è": —Ü–µ–ª—å_–∑–∞–Ω—è—Ç–∏—è,
        "—Ñ–æ—Ä–º–∞—Ç_–∑–∞–Ω—è—Ç–∏—è": —Ñ–æ—Ä–º–∞—Ç_–∑–∞–Ω—è—Ç–∏—è,
        "–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ_–¥–µ—Ç–µ–π": –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ_–¥–µ—Ç–µ–π,
        "—Ç–µ–º–∞—Ç–∏–∫–∞": —Ç–µ–º–∞—Ç–∏–∫–∞,
        "–æ—Å–æ–±—ã–µ_—É—Å–ª–æ–≤–∏—è": –æ—Å–æ–±—ã–µ_—É—Å–ª–æ–≤–∏—è,
        "–∏–Ω–≤–µ–Ω—Ç–∞—Ä—å": –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å,
        "–¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å_–∑–∞–Ω—è—Ç–∏—è": –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å_–∑–∞–Ω—è—Ç–∏—è,
        "–Ω–∞–ª–∏—á–∏–µ_–î–ó": –Ω–∞–ª–∏—á–∏–µ_–î–ó,
        "—Ä–∞–∑—Ä–µ—à–µ–Ω_web_search": —Ä–∞–∑—Ä–µ—à–µ–Ω_web_search
    }

    prompt = f"""
        –¢—ã ‚Äî —ç–∫—Å–ø–µ—Ä—Ç –≤ –æ–±–ª–∞—Å—Ç–∏ –ª–æ–≥–æ–ø–µ–¥–∏–∏, —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É—é—â–∏–π—Å—è –Ω–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ –∑–∞–Ω—è—Ç–∏–π –¥–ª—è –¥–µ—Ç–µ–π —Å —Ä–µ—á–µ–≤—ã–º–∏ –Ω–∞—Ä—É—à–µ–Ω–∏—è–º–∏. –ù–∞ –≤—Ö–æ–¥ —Ç—ã –ø–æ–ª—É—á–∞–µ—à—å —Å–ª–µ–¥—É—é—â–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:
        - **–û—Å–Ω–æ–≤–Ω–æ–µ –Ω–∞—Ä—É—à–µ–Ω–∏–µ:** {params['–Ω–∞—Ä—É—à–µ–Ω–∏–µ']}
        - **–í–æ–∑—Ä–∞—Å—Ç —Ä–µ–±–µ–Ω–∫–∞:** {params['–≤–æ–∑—Ä–∞—Å—Ç_—Ä–µ–±–µ–Ω–∫–∞']}
        - **–¶–µ–ª—å –∑–∞–Ω—è—Ç–∏—è:** {params['—Ü–µ–ª—å_–∑–∞–Ω—è—Ç–∏—è']}
        - **–¢–µ–º–∞—Ç–∏–∫–∞:** {params['—Ç–µ–º–∞—Ç–∏–∫–∞']}
        - **–§–æ—Ä–º–∞—Ç –∑–∞–Ω—è—Ç–∏—è:** {params['—Ñ–æ—Ä–º–∞—Ç_–∑–∞–Ω—è—Ç–∏—è']} ({params['–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ_–¥–µ—Ç–µ–π']} –¥–µ—Ç–µ–π)
        - **–ò–Ω–≤–µ–Ω—Ç–∞—Ä—å:** {params['–∏–Ω–≤–µ–Ω—Ç–∞—Ä—å']}
        - **–û—Å–æ–±—ã–µ —É—Å–ª–æ–≤–∏—è:** {params['–æ—Å–æ–±—ã–µ_—É—Å–ª–æ–≤–∏—è']}
        - **–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∑–∞–Ω—è—Ç–∏—è:** {params['–¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å_–∑–∞–Ω—è—Ç–∏—è']} –º–∏–Ω—É—Ç
        - **–ù–∞–ª–∏—á–∏–µ –¥–æ–º–∞—à–Ω–µ–≥–æ –∑–∞–¥–∞–Ω–∏—è:** {params['–Ω–∞–ª–∏—á–∏–µ_–î–ó']}
        - **–†–∞–∑—Ä–µ—à–µ–Ω web search:** {params['—Ä–∞–∑—Ä–µ—à–µ–Ω_web_search']}

        –ù–∞ –æ—Å–Ω–æ–≤–µ —ç—Ç–∏—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ —Å–æ—Å—Ç–∞–≤—å –∫–æ–Ω—Å–ø–µ–∫—Ç –∑–∞–Ω—è—Ç–∏—è, –∫–æ—Ç–æ—Ä—ã–π –¥–æ–ª–∂–µ–Ω –≤–∫–ª—é—á–∞—Ç—å:
        1. **–¢–µ–º–∞ –∑–∞–Ω—è—Ç–∏—è, —Ü–µ–ª—å –∏ –∑–∞–¥–∞—á–∏** 
        2. **–ù–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã**
        3. **–•–æ–¥ –∑–∞–Ω—è—Ç–∏—è**. –†–∞–∑–±–µ–π –∑–∞–Ω—è—Ç–∏–µ –Ω–∞ –ª–æ–≥–∏—á–µ—Å–∫–∏ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω—ã–µ —ç—Ç–∞–ø—ã.
        –í –∫–∞–∂–¥—ã–π —ç—Ç–∞–ø –≤—Å—Ç—Ä–æ–π –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è —Å –¥–æ—Å—Ç–∞—Ç–æ—á–Ω—ã–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –ø—Ä–∏–º–µ—Ä–æ–≤.
        –í–ê–ñ–ù–û: –µ—Å–ª–∏ —Ä–∞–∑—Ä–µ—à–µ–Ω web search: True, –ø–æ–¥–±–µ—Ä–∏ –ø—Ä–∏–º–µ—Ä—ã –¥–ª—è —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π –∏–∑ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤. 
        –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –∏–Ω—Ç–µ–≥—Ä–∏—Ä—É–π —Å—Å—ã–ª–∫–∏ –Ω–∞ –Ω–∞–π–¥–µ–Ω–Ω—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –≤ —Ç–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞.
        5. **–î–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ** (–µ—Å–ª–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä "–Ω–∞–ª–∏—á–∏–µ –¥–æ–º–∞—à–Ω–µ–≥–æ –∑–∞–¥–∞–Ω–∏—è: True")
        6. **–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –æ—Å–æ–±—ã–º —É—Å–ª–æ–≤–∏—è–º** (–µ—Å–ª–∏ —É–∫–∞–∑–∞–Ω –ø–∞—Ä–∞–º–µ—Ç—Ä "–û—Å–æ–±—ã–µ —É—Å–ª–æ–≤–∏—è")
        """

    #    tools = []
    #    tool_choice = None

    #    if params['—Ä–∞–∑—Ä–µ—à–µ–Ω_web_search']:
    #        tools.append({
    #            "type": "web_search_preview",
    #            "search_context_size": "medium",
    #            "user_location": {
    #                "type": "approximate",
    #                "country": "RU"
    #            }
    #        })
    #        tool_choice = {"type": "web_search_preview"}

    #    response = client.responses.create(
    #        model="gpt-4o-mini",
    #        input=prompt,
    #        tools=tools if tools else None,
    #        tool_choice=tool_choice,
    #        max_output_tokens=2000
    #    )
    #    return response.output_text
    #
    response = client.chat.completions.create(
        model="gpt-4o-mini",
        messages=[
            {"role": "system", "content": "–¢—ã ‚Äî —ç–∫—Å–ø–µ—Ä—Ç –≤ –æ–±–ª–∞—Å—Ç–∏ –ª–æ–≥–æ–ø–µ–¥–∏–∏."},
            {"role": "user", "content": prompt}
        ],
        max_tokens=2000
    )
    return response.choices[0].message.content

# –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å Gradio
with gr.Blocks() as demo:
    gr.Markdown("## üß† –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –ª–æ–≥–æ–ø–µ–¥–∏—á–µ—Å–∫–∏—Ö –∑–∞–Ω—è—Ç–∏–π")

    with gr.Row():
        –Ω–∞—Ä—É—à–µ–Ω–∏–µ = gr.Textbox(label="–û—Å–Ω–æ–≤–Ω–æ–µ –Ω–∞—Ä—É—à–µ–Ω–∏–µ*", placeholder="–ü—Ä–∏–º–µ—Ä: –î–∏—Å–ª–∞–ª–∏—è (—Å–≤–∏—Å—Ç—è—â–∏–µ), –û–ù–† II —É—Ä–æ–≤–Ω—è")
        –≤–æ–∑—Ä–∞—Å—Ç = gr.Textbox(label="–í–æ–∑—Ä–∞—Å—Ç —Ä–µ–±–µ–Ω–∫–∞*", placeholder="–ü—Ä–∏–º–µ—Ä: 5 –ª–µ—Ç, 6-7 –ª–µ—Ç")
        —Ü–µ–ª—å = gr.Textbox(label="–¶–µ–ª—å –∑–∞–Ω—è—Ç–∏—è*", placeholder="–ü—Ä–∏–º–µ—Ä: –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –∑–≤—É–∫–∞ [–†] –≤ —Å–ª–æ–≥–∞—Ö")

    —Ç–µ–º–∞—Ç–∏–∫–∞ = gr.Textbox(label="–¢–µ–º–∞—Ç–∏–∫–∞", placeholder="–ü—Ä–∏–º–µ—Ä: –ñ–∏–≤–æ—Ç–Ω—ã–µ, –¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç")
    –æ—Å–æ–±—ã–µ_—É—Å–ª–æ–≤–∏—è = gr.Textbox(label="–û—Å–æ–±—ã–µ —É—Å–ª–æ–≤–∏—è", placeholder="–ü—Ä–∏–º–µ—Ä: –≥–∏–ø–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å, –†–ê–°")

    —Ñ–æ—Ä–º–∞—Ç = gr.Radio(["–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–µ", "–ì—Ä—É–ø–ø–æ–≤–æ–µ"], label="–§–æ—Ä–º–∞—Ç –∑–∞–Ω—è—Ç–∏—è*", value="–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–µ")
    –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ_–¥–µ—Ç–µ–π = gr.Slider(
        label="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–µ—Ç–µ–π –≤ –≥—Ä—É–ø–ø–µ", minimum=2, maximum=10, value=2, step=1, visible=False
    )

    def toggle_group_slider(selected_format):
        return gr.update(visible=(selected_format == "–ì—Ä—É–ø–ø–æ–≤–æ–µ"))


    —Ñ–æ—Ä–º–∞—Ç.change(fn=toggle_group_slider, inputs=—Ñ–æ—Ä–º–∞—Ç, outputs=–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ_–¥–µ—Ç–µ–π)

    with gr.Group():
        gr.Markdown("### –ò–Ω–≤–µ–Ω—Ç–∞—Ä—å")
        –∑–µ—Ä–∫–∞–ª–æ = gr.Checkbox(label="–ó–µ—Ä–∫–∞–ª–æ")
        –∫–∞—Ä—Ç–æ—á–∫–∏ = gr.Checkbox(label="–ö–∞—Ä—Ç–æ—á–∫–∏")
        –∏–≥—Ä—É—à–∫–∏ = gr.Checkbox(label="–ò–≥—Ä—É—à–∫–∏")
        –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π = gr.Textbox(label="–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ", placeholder="–ü—Ä–∏–º–µ—Ä: –º—è—á–∏, –ø–ª–∞–Ω—à–µ—Ç—ã")

    –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å = gr.Slider(label="–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∑–∞–Ω—è—Ç–∏—è (–º–∏–Ω)", minimum=15, maximum=60, value=30, step=5)
    –¥–∑ = gr.Checkbox(label="–î–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ")
    web = gr.Checkbox(label="–†–∞–∑—Ä–µ—à–∏—Ç—å –ø–æ–∏—Å–∫ –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–µ")

    btn = gr.Button("–°–æ–∑–¥–∞—Ç—å –∫–æ–Ω—Å–ø–µ–∫—Ç")
    output = gr.Markdown()

    def on_submit(*args):
        return generate_lesson_plan_interface(*args)

    # –≠–ª–µ–º–µ–Ω—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥–µ–º –±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –≤–æ –≤—Ä–µ–º—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
    all_inputs = [
        –Ω–∞—Ä—É—à–µ–Ω–∏–µ, –≤–æ–∑—Ä–∞—Å—Ç, —Ü–µ–ª—å, —Ñ–æ—Ä–º–∞—Ç, –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ_–¥–µ—Ç–µ–π,
        —Ç–µ–º–∞—Ç–∏–∫–∞, –æ—Å–æ–±—ã–µ_—É—Å–ª–æ–≤–∏—è, –∑–µ—Ä–∫–∞–ª–æ, –∫–∞—Ä—Ç–æ—á–∫–∏, –∏–≥—Ä—É—à–∫–∏,
        –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π, –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å, –¥–∑, web, btn
    ]

    def on_submit_with_spinner(
        –Ω–∞—Ä—É—à–µ–Ω–∏–µ, –≤–æ–∑—Ä–∞—Å—Ç, —Ü–µ–ª—å, —Ñ–æ—Ä–º–∞—Ç, –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ_–¥–µ—Ç–µ–π,
        —Ç–µ–º–∞—Ç–∏–∫–∞, –æ—Å–æ–±—ã–µ_—É—Å–ª–æ–≤–∏—è, –∑–µ—Ä–∫–∞–ª–æ, –∫–∞—Ä—Ç–æ—á–∫–∏, –∏–≥—Ä—É—à–∫–∏,
        –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π, –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å, –¥–∑, web
    ):
        # –ë–ª–æ–∫–∏—Ä—É–µ–º –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –∏ –≤—ã–≤–æ–¥–∏–º "–ì–µ–Ω–µ—Ä–∞—Ü–∏—è..."
        for elem in all_inputs:
            elem.interactive = False
        yield gr.update(value="‚è≥ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–Ω—Å–ø–µ–∫—Ç–∞...")

        # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è
        result = generate_lesson_plan_interface(
            –Ω–∞—Ä—É—à–µ–Ω–∏–µ, –≤–æ–∑—Ä–∞—Å—Ç, —Ü–µ–ª—å, —Ñ–æ—Ä–º–∞—Ç, –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ_–¥–µ—Ç–µ–π,
            —Ç–µ–º–∞—Ç–∏–∫–∞, –æ—Å–æ–±—ã–µ_—É—Å–ª–æ–≤–∏—è, –∑–µ—Ä–∫–∞–ª–æ, –∫–∞—Ä—Ç–æ—á–∫–∏, –∏–≥—Ä—É—à–∫–∏,
            –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π, –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å, –¥–∑, web
        )

        # –í—ã–≤–æ–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        yield gr.update(value=result)

        # –†–∞–∑–±–ª–æ–∫–∏—Ä—É–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã
        for elem in all_inputs:
            elem.interactive = True

    btn.click(
        fn=on_submit_with_spinner,
        inputs=[
            –Ω–∞—Ä—É—à–µ–Ω–∏–µ, –≤–æ–∑—Ä–∞—Å—Ç, —Ü–µ–ª—å, —Ñ–æ—Ä–º–∞—Ç, –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ_–¥–µ—Ç–µ–π,
            —Ç–µ–º–∞—Ç–∏–∫–∞, –æ—Å–æ–±—ã–µ_—É—Å–ª–æ–≤–∏—è, –∑–µ—Ä–∫–∞–ª–æ, –∫–∞—Ä—Ç–æ—á–∫–∏, –∏–≥—Ä—É—à–∫–∏,
            –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π, –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å, –¥–∑, web
        ],
        outputs=output,
        show_progress=True
    )

if __name__ == "__main__":
    demo.launch()